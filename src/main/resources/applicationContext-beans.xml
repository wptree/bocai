<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring  http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
    
    <ehcache:annotation-driven />
	<ehcache:config cache-manager="cacheManager">
        <ehcache:evict-expired-elements interval="60" />
    </ehcache:config>
           
	<context:annotation-config />
	<context:component-scan base-package="com.bocai" />
	
	<aop:aspectj-autoproxy />
	
	<!-- data source -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		 
		<property name="url" value="jdbc:mysql://localhost:13366/bocai?useUnicode=true&amp;characterEncoding=utf-8&amp;mysqlEncoding=utf8" />
		<property name="username" value="bocai" />
		<property name="password" value="BOCAI123!" />
		<!-- 
		<property name="url" value="jdbc:mysql://122.248.245.196:3306/BOCAI_DEV?useUnicode=true&amp;characterEncoding=utf-8&amp;mysqlEncoding=utf8" />
		<property name="username" value="bocai" />
		<property name="password" value="BOCAI123!" />
		-->
		<property name="initialSize" value="100" />
		<property name="maxActive" value="1000" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="1000" />
        <property name="poolPreparedStatements" value="true" />
        <property name="defaultAutoCommit" value="false" />
	</bean>
	
	<!-- hibernate configuration -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="cacheProvider">
			<ref local="cacheProvider"/>
		</property>
		<property name="packagesToScan" value="com.bocai.dao.domain*, com.bocai.dao.domain.*" />
	</bean>
	
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/page/component/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">3600000</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean> 
    
    <bean id="ipService" class="com.bocai.service.IPSeeker">
   		<constructor-arg value="QQWry.Dat" index="0"/>
    	<constructor-arg value="/deploy/install" index="1"/>
    	<property name="ipRestURL" value="http://api.liqwei.com/location/"/>
    </bean>
	
	<bean id="cacheProvider" class="com.bocai.common.cache.SpringEhCacheProvider">
	
		<property name="configLocation">
			<value>classpath:ehcache-hibernate.xml</value>
		</property>
		<property name="diskStoreLocation">
			<value>/deploy/cache/hibernate</value>
		</property>
	</bean>
	
	<!-- logging拦截器
	<bean id="loggingInterceptor" class="com.bocai.aop.LoggingInterceptor"/>
	 -->
	<!-- find/create cache拦截器   
    <bean id="methodCacheInterceptor" class="com.bocai.aop.MethodCacheInterceptor">   
      <property name="cache">   
        <ref local="ehDefaultCache" />   
      </property>   
    </bean>
     -->   
    <!-- flush cache拦截器   
    <bean id="methodCacheAfterAdvice" class="com.bocai.aop.MethodCacheAfterAdvice">   
      <property name="cache">   
        <ref local="ehDefaultCache" />   
      </property>   
    </bean>   
     --> 
     <!-- 
    <bean id="loggingPointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
      <property name="advice">   
        <ref local="loggingInterceptor"/>   
      </property>
      <property name="patterns">   
        <list>   
            <value>.*ManagerImpl.*</value>   
        </list>
      </property>
    </bean>
    <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">   
      <property name="advice">   
        <ref local="methodCacheInterceptor"/>   
      </property>   
      <property name="patterns">   
        <list>   
            <value>.*ManagerImpl.*find.*</value>   
            <value>.*ManagerImpl.*get.*</value>   
        </list>   
      </property>   
    </bean>   
    <bean id="methodCachePointCutAdvice" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">   
      <property name="advice">   
        <ref local="methodCacheAfterAdvice"/>   
      </property>   
      <property name="patterns">   
        <list>   
          <value>.*ManagerImpl.*create.*</value>   
          <value>.*ManagerImpl.*update.*</value>   
          <value>.*ManagerImpl.*delete.*</value>   
        </list>   
      </property>   
    </bean>  
	-->
	<!-- transaction manager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!--缓存
	<bean id="cacheManager" class="com.bocai.common.cache.WebEhCacheManagerFacotryBean">
		<property name="configLocation">
			<value>classpath:ehcache-application.xml</value>
		</property>
		<property name="diskStoreLocation">
			<value>/deploy/cache/application</value>
		</property>
	</bean>
	-->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    	<property name="configLocation">
			<value>classpath:ehcache-application.xml</value>
		</property>
	</bean>
	
	<bean id="ehDefaultCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">   
      <property name="cacheManager">   
        <ref local="cacheManager"/>   
      </property>   
      <property name="cacheName">   
          <value>DEFAULT_CACHE</value>   
      </property>   
    </bean> 
    
	<!--SESSION缓存-->
	<bean id="ehSessionCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager"/>
		</property>
		<property name="cacheName">
			<value>com.bocai.web.session.Session</value>
		</property>
		<qualifier value="session"/>
	</bean>
	<!--内容计数缓存-->
	<bean id="ehContentCountCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager"/>
		</property>
		<property name="cacheName">
			<value>com.bocai.front.ContentCount</value>
		</property>		
		<qualifier value="contentCount"/>
	</bean>

	<!-- transaction annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- =============== Mail Service ========================================= -->
		<bean id="mailSender" class="com.bocai.mail.impl.AwsMailSender">
 		<property name="host">
			<value>localhost</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">false</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
	</bean>
	
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="configLocation" value="classpath:velocity-config.properties" />
	</bean>
	
	<bean id="velocityMerger" class="com.bocai.mail.impl.VelocityMerger"
        p:engine-ref="velocityEngine"
        p:toolBoxConfigurationPath="velocity-tools.xml">
    </bean>
	
	<bean id="mailAgent" class="com.bocai.mail.impl.VelocityTemplateMailAgent">
		<property name="mailSender" ref="mailSender" />
		<property name="velocityMerger" ref="velocityMerger"/>
	</bean>
	
	<bean id="mailContextFactory" class="com.bocai.mail.TemplateMailContextFactory">
	</bean>
	<bean id="mailMessageFactory" class="com.bocai.mail.TemplateMailMessageFactory">
	</bean>
	
    <bean id="facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor">
        <property name="pointcut">
              <bean class="net.bull.javamelody.MonitoredWithInterfacePointcut">
                      <property name="interfaceName" value="com.bocai.manager.BaseManager" />
              </bean>
        </property>
    </bean>
	
</beans>