<?xml version="1.0" encoding="UTF-8"?>
<project default="build" basedir=".">
	<property file="${basedir}/build.properties"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.thirdparty.lib}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<path id="path.svnant">
		<pathelement location="${ant.thirdparty.lib}/lib/svnjavahl.jar" />
		<pathelement location="${ant.thirdparty.lib}/svnant.jar" />
		<pathelement location="${ant.thirdparty.lib}/svnClientAdapter.jar" />
	</path>

	<macrodef name="compress">
		<attribute name="jar"/>
		<attribute name="file"/>
		<attribute name="output"/>
		<attribute name="charset" default="utf-8"/>
		<sequential>
			<echo>Compressing @{file} to @{output}</echo>
			<java fork="true" jar="@{jar}" >
				<arg value="@{file}"/>
				<arg value="-o"/>
				<arg value="@{output}"/>
				<arg value="--charset"/>
				<arg value="@{charset}"/>
			</java>
		</sequential>
	</macrodef>

	<path id="project.class.path">
		<fileset dir="${tomcat.home}/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${webinf.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- define the svn task-->
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="path.svnant" />

	<!-- prepare for the checking out:clean the directory  -->
	<target name="-prepare" description="Prepare the dirs for the task">
		<delete dir="${basedir}/${war.name}" />
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}"/>
	</target>

	<svnSetting svnkit="false" javahl="false" username="${svn.user}" password="${svn.user.pwd}" id="svn.settings"/>

	<!-- check|update the scource from the svn -->
	<target name="-checkout" depends="-prepare">
		<if>
			<available file="${svn.checkout.dest}" type="dir"/>
			<then>
				<echo>${svn.checkout.dest} already exists, will perform svn update...</echo>
				<svn refid="svn.settings">
					<update dir="${svn.checkout.dest}/src" revision="${svn.tag}"/>
				</svn>
			</then>
			<else>
				<echo>${svn.checkout.dest} dose not exist, will perform svn checkout...</echo>
				<svn refid="svn.settings" >
					<checkout url="${svn.repository}" destPath="${svn.checkout.dest}" revision="${svn.tag}"/>
				</svn>
			</else>
		</if>
		<copy todir="${build.dir}" >
			<fileset dir="${svn.checkout.dest}/src/main">
				<include name="java/**/*.*" />
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
	</target>

	<target name="-compile" depends="-checkout">
		<copy todir="${classes.dir}">  
		   <fileset dir="${build.dir}/java" excludes="**/*.java"/>  
		</copy>  
		<javac encoding="utf-8" includejavaruntime="true" srcdir="${build.dir}/java" destdir="${classes.dir}" >
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}/main/resources">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.txt" />
				<include name="**/*.vm" />
			</fileset>
		</copy>
	</target>

	<target name="-minify-js">
		<if>
			<equals arg1="${update.js}" arg2="false" />
			<then>
				<echo>**********************JS not changed************************</echo>
			</then>
			<else>
				<delete dir="${static.root}/js" />
				<mkdir dir="${static.root}/js" />
				<echo>********************************************************************</echo>
				<echo>**********************Compressing JavaScript************************</echo>
				<echo>********************************************************************</echo>
				<for param="file">
					<path>
						<fileset dir="${web.dir}/js" includes="**/*.js" />
					</path>
					<sequential>
						<var name="jsname" unset="true" />
						<basename file="@{file}" property="jsname" />
						<compress jar="${ant.thirdparty.lib}/yuicompressor-2.4.6.jar" file="@{file}" output="${static.root}/js/${jsname}" />
					</sequential>
				</for>
				<copy todir="${static.root}/js">
					<fileset dir="${web.dir}/js">
						<include name="**/*.swf"/>
					</fileset>
				</copy>
			</else>
		</if>

	</target>

	<target name="-minify-css">
		<if>
			<equals arg1="${update.css}" arg2="false" />
			<then>
				<echo>**********************CSS not changed************************</echo>
			</then>
			<else>
				<delete dir="${static.root}/css" />
				<mkdir dir="${static.root}/css" />
				<echo>********************************************************************</echo>
				<echo>**********************Compressing JavaScript************************</echo>
				<echo>********************************************************************</echo>
				<for param="cssfile">
					<path>
						<fileset dir="${web.dir}/css" includes="**/*.css" />
					</path>
					<sequential>
						<var name="cssname" unset="true" />
						<basename file="@{cssfile}" property="cssname" />
						<compress jar="${ant.thirdparty.lib}/yuicompressor-2.4.6.jar" file="@{cssfile}" output="${static.root}/css/${cssname}" />
					</sequential>
				</for>
			</else>
		</if>
	</target>

	<target name="war" depends="-compile,-minify-js,-minify-css">
		<war encoding="utf-8" destfile="${build.dir}/${war.name}" webxml="${webinf.dir}/web.xml" manifest="${metainf.dir}/MANIFEST.MF">
			<lib dir="${webinf.dir}/lib" />
			<classes dir="${classes.dir}"/>
			<fileset dir="${web.dir}">
				<exclude name="js/**/*.*"/>
				<exclude name="css/**/*.*"/>
			</fileset>
			<fileset dir="${static.root}">
				<include name="js/**/*.*"/>
				<include name="css/**/*.*"/>
			</fileset>
			<exclude name="**/svn/**" />
			<exclude name="**/web.xml" />
		</war>
	</target>

	<target name="build" depends="war" />

</project>